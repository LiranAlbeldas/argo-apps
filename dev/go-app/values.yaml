App: 
  name: goapp-liran
  app: goapp
  namespace: dev
  replicas: 2
  nodeSelector: {}
  affinity: {}
  image: 
    repository: 012569964433.dkr.ecr.eu-west-1.amazonaws.com/go-app
    tag: b53
  pullPolicy: IfNotPresent
  containerPort: 80
  tolerations: {}
  resources: {}
  livenessProbe: {}
    # httpGet:           ---------------------> http request
    #   path: /healthz
    #   port: 8080
    #   httpHeaders:
    #   - name: Custom-Header
    #     value: Awesome
    # exec:        ----------------------> execute a command
    #   command:
    #   - cat
    #   - /tmp/healthy
    # enabled: true
    # initialDelaySeconds: 120
    # timeoutSeconds: 20
    # periodSeconds: 30
    # failureThreshold: 6
    # successThreshold: 1
  readinessProbe: {}
   # httpGet:            ---------------------> http request
    #   path: /healthz
    #   port: 8080
    #   httpHeaders:
    #   - name: Custom-Header
    #     value: Awesome
    # exec:        ----------------------> execute a command
    #   command:
    #   - cat
    #   - /tmp/healthy
    # enabled: true
    # initialDelaySeconds: 10
    # timeoutSeconds: 20
    # periodSeconds: 30
    # failureThreshold: 3
    # successThreshold: 1
  #env: {}            _ _
    # envName:           |
    # secretName:        |--------> need to be managed via values file?
    # keyName:        _ _|

Service:
  name: svcgoapp
  namespace: dev
  type: ClusterIP
  port: 80
  app: goapp

# Ingress:
#   enabled: false
#   name: ingressName
#   annotations: {}
#   # kubernetes.io/ingress.class: alb
#   # alb.ingress.kubernetes.io/scheme: internet-facing
#   hosts:
#     - host: doe.example.com
#       paths: []